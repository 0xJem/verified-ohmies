name: Deploy

on:
  pull_request:
    branches: [main, develop]

# Vercel requires one project for each directory in a monorepo:
# https://vercel.com/blog/monorepos

jobs:
  backend:
    runs-on: ubuntu-latest
    outputs:
      preview-url: ${{ steps.backend_deploy.outputs.preview-url }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version-file: "backend/.nvmrc"
      - uses: amondnet/vercel-action@v20
        id: backend_deploy
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_BACKEND_PROJECT_ID }}
          working-directory: ./backend
  frontend:
    runs-on: ubuntu-latest
    outputs:
      preview-url: ${{ steps.frontend_deploy.outputs.preview-url }}
    needs: backend
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version-file: "frontend/.nvmrc"
      # Write variables that will be used by Vercel during deployment
      - name: Write environment
        run: echo NEXT_PUBLIC_BACKEND_API_URL=${{ needs.backend.outputs.preview-url }} >> ./frontend/.env
      - uses: amondnet/vercel-action@v20
        id: frontend_deploy
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_FRONTEND_PROJECT_ID }}
          working-directory: ./frontend
  discord:
    runs-on: ubuntu-latest
    needs: frontend
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version-file: "frontend/.nvmrc"
      - name: Install Dependencies
        run: yarn install --frozen-lockfile
        working-directory: ./discord
      - name: Sync Discord commands
        run: yarn run slash-up sync
        working-directory: ./discord
        env:
          DISCORD_APP_ID: ${{ secrets.DISCORD_APP_ID }}
          DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
          DISCORD_PUBLIC_KEY: ${{ secrets.DISCORD_PUBLIC_KEY }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          JWT_EXPIRATION_TIME: ${{ secrets.JWT_EXPIRATION_TIME }}
          FRONTEND_URL: ${{ needs.frontend.outputs.preview-url }}

  # TODO prod flag
  # TODO prod domain
  # TODO run tests
  # TODO check that runtime environment variables are valid
