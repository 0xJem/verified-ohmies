name: Deploy

on:
  pull_request:
    branches: [main, develop]

# Vercel requires one project for each directory in a monorepo:
# https://vercel.com/blog/monorepos

jobs:
  backend:
    runs-on: ubuntu-latest
    outputs:
      preview-url: ${{ steps.backend_deploy.outputs.preview-url }}
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_BACKEND_PROJECT_ID }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
      ENV_FILE: ./backend/.env
    steps:
      - name: Check Variables
        uses: 0xJem/secret-gate-action@v1.1.1
        with:
          inputsToCheck: VERCEL_TOKEN,GITHUB_TOKEN,VERCEL_ORG_ID,VERCEL_PROJECT_ID,JWT_SECRET,DISCORD_BOT_TOKEN
          # ,DISCORD_SERVER_ID,DISCORD_ROLE_ID,HASURA_ENDPOINT,HASURA_ADMIN_SECRET,ALCHEMY_MAINNET_API_KEY,ALCHEMY_RINKEBY_API_KEY,COVALENTHQ_API_KEY,ETHERSCAN_API_KEY,MORALIS_API_KEY
          failOnMissing: true
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version-file: "backend/.nvmrc"
      # Write variables that will be used by Vercel during deployment
      - name: Write environment
        run: |
          touch ${{ env.ENV_FILE }}
          echo JWT_SECRET=${{ env.JWT_SECRET }} >> ${{ env.ENV_FILE }}
          echo DISCORD_BOT_TOKEN=${{ env.DISCORD_BOT_TOKEN }} >> ${{ env.ENV_FILE }}
      - uses: amondnet/vercel-action@v20
        id: backend_deploy
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./backend
  frontend:
    runs-on: ubuntu-latest
    outputs:
      preview-url: ${{ steps.frontend_deploy.outputs.preview-url }}
    needs: backend
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_FRONTEND_PROJECT_ID: ${{ secrets.VERCEL_FRONTEND_PROJECT_ID }}
      NEXT_PUBLIC_BACKEND_API_URL: ${{ needs.backend.outputs.preview-url }}
      ENV_FILE: ./frontend/.env
    steps:
      - name: Check Variables
        uses: 0xJem/secret-gate-action@v1.1.1
        with:
          inputsToCheck: VERCEL_TOKEN,GITHUB_TOKEN,VERCEL_ORG_ID,VERCEL_FRONTEND_PROJECT_ID,NEXT_PUBLIC_BACKEND_API_URL
          failOnMissing: true
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version-file: "frontend/.nvmrc"
      # Write variables that will be used by Vercel during deployment
      - name: Write environment
        run: |
          touch ${{ env.ENV_FILE }}
          echo NEXT_PUBLIC_BACKEND_API_URL=${{ env.NEXT_PUBLIC_BACKEND_API_URL }} >> ${{ env.ENV_FILE }}
      - uses: amondnet/vercel-action@v20
        id: frontend_deploy
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_FRONTEND_PROJECT_ID }}
          working-directory: ./frontend
  discord:
    runs-on: ubuntu-latest
    needs: frontend
    env:
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      JWT_EXPIRATION_TIME: ${{ secrets.JWT_EXPIRATION_TIME }}
      DISCORD_APP_ID: ${{ secrets.DISCORD_APP_ID }}
      DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
      DISCORD_PUBLIC_KEY: ${{ secrets.DISCORD_PUBLIC_KEY }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_DISCORD_PROJECT_ID }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      FRONTEND_URL: ${{ needs.frontend.outputs.preview-url }}
    steps:
      - name: Check Variables
        uses: 0xJem/secret-gate-action@v1.1.1
        with:
          inputsToCheck: JWT_SECRET,JWT_EXPIRATION_TIME,DISCORD_APP_ID,DISCORD_BOT_TOKEN,DISCORD_PUBLIC_KEY,VERCEL_PROJECT_ID,VERCEL_ORG_ID,FRONTEND_URL
          failOnMissing: true
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version-file: "discord/.nvmrc"
      - name: Install Dependencies
        run: yarn install --frozen-lockfile
        working-directory: ./discord
      - name: Sync Discord commands
        run: yarn run slash-up sync
        working-directory: ./discord
      - uses: amondnet/vercel-action@v20
        id: discord_deploy
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: ${{ env.VERCEL_ORG_ID }}
          vercel-project-id: ${{ env.VERCEL_PROJECT_ID }}
          working-directory: ./discord
          vercel-args: -e JWT_SECRET=${{ env.JWT_SECRET }} -e JWT_EXPIRATION_TIME=${{ env.JWT_EXPIRATION_TIME }} -e DISCORD_APP_ID=${{ env.DISCORD_APP_ID }} -e DISCORD_BOT_TOKEN=${{ env.DISCORD_BOT_TOKEN }} -e DISCORD_PUBLIC_KEY=${{ env.DISCORD_PUBLIC_KEY }} -e FRONTEND_URL=${{ env.FRONTEND_URL }}

  # TODO prod flag
  # TODO prod domain
  # TODO run tests
