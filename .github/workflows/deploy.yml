name: Deploy

on:
  pull_request:
    branches: [main, develop]

# Vercel requires one project for each directory in a monorepo:
# https://vercel.com/blog/monorepos

jobs:
  backend:
    runs-on: ubuntu-latest
    outputs:
      backend-url: ${{ steps.backend_deploy.outputs.preview_url }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version-file: "backend/.nvmrc"
      - uses: amondnet/vercel-action@v20
        id: backend_deploy
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_BACKEND_PROJECT_ID }}
          working-directory: ./backend
      - name: Install Dependencies
        run: yarn install --frozen-lockfile
        working-directory: ./backend
      - name: Sync Discord commands
        run: yarn run slash-up sync
        working-directory: ./backend
        env:
          DISCORD_APP_ID: ${{ secrets.DISCORD_APP_ID }}
          DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
  frontend:
    runs-on: ubuntu-latest
    needs: backend
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version-file: "frontend/.nvmrc"
      - run: echo "URL is ${{ needs.backend.outputs.backend-url }}"
      - uses: amondnet/vercel-action@v20
        id: frontend_deploy
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_FRONTEND_PROJECT_ID }}
          working-directory: ./frontend
        env:
          NEXT_PUBLIC_BACKEND_API_URL: ${{ needs.backend.outputs.backend-url }}

  # ${{ backend.steps.backend_deploy.preview_url }}
  # TODO prod flag
  # TODO prod domain
  # TODO run tests
  # TODO populate NEXT_PUBLIC_BACKEND_API_URL
  # TODO check that runtime environment variables are valid
  # TODO PR comment for each push
